# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tokcFDN9uDEt-KxW9BOsU8pibjZZO7As
"""

import cv2 
from google.colab.patches import cv2_imshow
 
# Read the color image
# image = cv2.imread("shapes-small.jpg")
image = cv2.imread('/content/drive/MyDrive/AI_ML_Git/object detection4.png')

new_image = image.copy()
 
# Obtain Gray scale image
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
 

 
# Convert the grayscale image to binary
ret, binary = cv2.threshold(gray, 150, 255, 
  cv2.THRESH_BINARY)
 

 
# To detect object contours, we want a black background and a white 
# foreground, so we invert the image (i.e. 255 - pixel value)
# inverted_binary = ~binary

 
# Find the contours on the inverted binary image, and store them in a list
# Contours are drawn around white blobs.
# hierarchy variable contains info on the relationship between the contours
contours, hierarchy = cv2.findContours(binary,
                                       cv2.RETR_TREE,
                                       cv2.CHAIN_APPROX_NONE)
     
# Draw the contours (in red) on the original image and display the result
# Input color code is in BGR (blue, green, red) format
# -1 means to draw all contours
image_copy1 = image.copy()
cv2.drawContours(image_copy1, contours, -1,(0,255,0),2,cv2.LINE_AA)

 
# Show the total number of contours that were detected
# print('Total number of contours detected: ' + str(len(contours)))
 

 
# Draw a bounding box around all contours
# for c in contours:
#   x, y, w, h = cv2.boundingRect(c)
 
#     # Make sure contour area is large enough
#   if (cv2.contourArea(c)) > 10:
#     cv2.rectangle(with_contours,(x,y), (x+w,y+h), (255,0,0), 5)
         
cv2_imshow(image_copy1)
cv2.waitKey(0)
cv2.destroyAllWindows()

## Make border draws a border around the image
 
# Using cv2.copyMakeBorder() method
image = cv2.copyMakeBorder(image, 10, 10, 10, 10, cv2.BORDER_CONSTANT, None, value = 0)
 
# Displaying the image
cv2_imshow(image)